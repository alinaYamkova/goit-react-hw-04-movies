{"version":3,"sources":["ApiServise/Api.js","views/Review.js"],"names":["axios","defaults","baseURL","key","getPopulars","get","then","response","data","results","getMovies","query","getCast","moviesId","cast","getReview","type","movieId","Review","state","reviews","a","this","props","location","hash","slice","match","params","queryResponse","api","responceMovieReview","setState","responceTVReview","length","map","review","author","content","id","Component"],"mappings":"yIACA,qBAUAA,IAAMC,SAASC,QAAU,+BACzB,IAAIC,EAAM,mCA4BK,KAAEC,YA1BjB,WACE,OAAOJ,IACJK,IADI,oCAC6BF,IACjCG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,YAuBRC,UApB9B,SAAmBC,GACjB,OAAOX,IACJK,IADI,gCAEsBF,EAFtB,iCAEkDQ,EAFlD,gCAIJL,MAAK,SAACC,GAAD,OAAcA,EAASC,SAeQI,QAZzC,SAAiBC,GACf,OAAOb,IACJK,IADI,iBACUQ,EADV,4BACsCV,EADtC,oBAEJG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKM,SASYC,UANlD,SAAmBC,EAAMC,GACvB,OAAOjB,IACJK,IADI,WACIW,EADJ,YACYC,EADZ,4BACuCd,EADvC,2BAEJG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,c,kICjChCS,E,4MACJC,MAAQ,CACNC,QAAS,I,8FAGX,oCAAAC,EAAA,yDACQL,EAAOM,KAAKC,MAAMC,SAASC,KAAKC,MAAM,GACtCT,EAAUK,KAAKC,MAAMI,MAAMC,OAAOX,QAClCY,EAAgB,SAAClB,GAAD,OAAWmB,IAAIf,UAAJ,UAAiBJ,GAASM,IAC9C,UAATD,EAJN,iCAKsCa,EAAc,SALpD,OAKUE,EALV,OAMIT,KAAKU,SAAS,CAAEZ,QAASW,IAN7B,yCAQmCF,EAAc,MARjD,QAQUI,EARV,OASIX,KAAKU,SAAS,CAAEZ,QAASa,IAT7B,iD,0EAaA,WAAU,IACAb,EAAYE,KAAKH,MAAjBC,QACR,OACE,mCACGA,EAAQc,OACP,6BACGd,EAAQe,KAAI,SAACC,GAAD,OACX,+BACE,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAOG,SAOpB,+E,GAhCWC,aAuCNtB","file":"static/js/review.1830ebcd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n// const fetchIMovies = () => {\n//   const url = `?api_key=${key}&language=en-US&page=1`;\n//   return axios.get(url).then(({ data }) => {\n//     console.log(data)\n//     return data.results;\n//   });\n// };\n\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nlet key = \"9599265593b07045c4126c91624e271e\";\n\nfunction getPopulars() {\n  return axios\n    .get(`/trending/all/day?api_key=${key}`)\n    .then((response) => response.data.results);\n}\n\nfunction getMovies(query) {\n  return axios\n    .get(\n      `/search/multi?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then((response) => response.data);\n}\n\nfunction getCast(moviesId) {\n  return axios\n    .get(`/movie/${moviesId}/credits?api_key=${key}&language=en-US`)\n    .then((response) => response.data.cast);\n}\n\nfunction getReview(type, movieId) {\n  return axios\n    .get(`/${type}/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n    .then((response) => response.data.results);\n}\n\nexport default { getPopulars, getMovies, getCast, getReview };\n\n// getFetch.propTypes = {\n//   page: PropTypes.number.isRequired,\n// };\n","import React, { Component } from \"react\";\nimport api from \"../ApiServise/Api\";\nimport s from \"../Styles/styles.module.css\";\n\nclass Review extends Component {\n  state = {\n    reviews: [],\n  };\n\n  async componentDidMount() {\n    const type = this.props.location.hash.slice(1);\n    const movieId = this.props.match.params.movieId;\n    const queryResponse = (query) => api.getReview(`${query}`, movieId);\n    if (type === \"movie\") {\n      const responceMovieReview = await queryResponse(\"movie\");\n      this.setState({ reviews: responceMovieReview });\n    } else {\n      const responceTVReview = await queryResponse(\"tv\");\n      this.setState({ reviews: responceTVReview });\n    }\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <>\n        {reviews.length ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Review;\n"],"sourceRoot":""}