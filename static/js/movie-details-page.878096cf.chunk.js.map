{"version":3,"sources":["ApiServise/Api.js","Components/MoviesList/moviesList.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Components/MoviesList/MoviePreview.js","Components/MoviesList/MoviesList.js","views/Cast.js","views/Review.js","views/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","key","getPopulars","get","then","response","data","results","getMovies","query","getCast","moviesId","cast","getReview","type","movieId","module","exports","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","withRouter","poster_path","match","id","location","title","name","vote_average","release_date","img","className","s","List","to","pathname","url","state","from","scr","alt","ListBody","Title","titleRating","movies","MovieList","map","overview","posterPath","voteAverage","Cast","a","this","props","mach","papams","console","log","setState","casts","castList","profile_path","character","castImg","castItem","src","castImage","Component","Review","reviews","hash","slice","params","queryResponse","api","responceMovieReview","responceTVReview","length","review","author","content","MovieDetailsPage","genres","handleGoBack","history","push","routes","moviesPage","btn","onClick","NavLink","fallback","path","componen"],"mappings":"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","file":"static/js/movie-details-page.878096cf.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n// const fetchIMovies = () => {\n//   const url = `?api_key=${key}&language=en-US&page=1`;\n//   return axios.get(url).then(({ data }) => {\n//     console.log(data)\n//     return data.results;\n//   });\n// };\n\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nlet key = \"9599265593b07045c4126c91624e271e\";\n\nfunction getPopulars() {\n  return axios\n    .get(`/trending/all/day?api_key=${key}`)\n    .then((response) => response.data.results);\n}\n\nfunction getMovies(query) {\n  return axios\n    .get(\n      `/search/multi?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then((response) => response.data);\n}\n\nfunction getCast(moviesId) {\n  return axios\n    .get(`/movie/${moviesId}/credits?api_key=${key}&language=en-US`)\n    .then((response) => response.data.cast);\n}\n\nfunction getReview(type, movieId) {\n  return axios\n    .get(`/${type}/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n    .then((response) => response.data.results);\n}\n\nexport default { getPopulars, getMovies, getCast, getReview };\n\n// getFetch.propTypes = {\n//   page: PropTypes.number.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"moviesList_Title__D_d9G\",\"titleRating\":\"moviesList_titleRating__3ubw3\",\"titleRelise\":\"moviesList_titleRelise__29dVE\",\"titleOverview\":\"moviesList_titleOverview__3-6bt\",\"popularity\":\"moviesList_popularity__l6mbu\",\"List\":\"moviesList_List__1QWqw\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport s from \"./moviesList.module.css\";\n\nconst MoviePreview = ({\n  poster_path,\n  match,\n  id,\n  location,\n  title,\n  name,\n  vote_average,\n  release_date,\n}) => {\n  const img = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  return (\n    <div className={s.List}>\n      <Link\n        to={{\n          pathname: `${match.url}/${id}`,\n          state: { from: `${location}` },\n        }}\n      >\n        <img scr={img} alt={title || name} />\n        <div className={s.ListBody}>\n          <h2 className={s.Title}>\n            {title ? title : name}\n            <span className={s.titleRating}>{vote_average}</span>\n          </h2>\n          <p>Release: {release_date}</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default withRouter(MoviePreview);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// import routes from '../../routes';\nimport MoviePreview from \"./MoviePreview\";\nimport s from \"./moviesList.module.css\";\n\nconst MoviesList = ({ movies, match, location }) => {\n  return (\n    <ul className={s.MovieList}>\n      {movies.map(\n        ({ id, title, name, poster_path, overview, vote_average }) => {\n          // const img = `https://image.tmdb.org/t/p/w500${poster_path}`;\n          return (\n            <MoviePreview\n              key={id}\n              title={title ? title : name}\n              posterPath={poster_path}\n              match={match.url}\n              location={location}\n              overview={overview}\n              voteAverage={vote_average}\n            />\n          );\n        }\n      )}\n      ;\n    </ul>\n  );\n};\n\nexport default withRouter(MoviesList);\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport s from \"../Styles/styles.module.css\";\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n    movieId: [],\n  };\n\n  async componentDidMount() {\n    // console.log(this.props);\n    const { moviesId } = this.props.mach.papams;\n    const key = \"9599265593b07045c4126c91624e271e\";\n    const url = `https://api.themoviedb.org/3/movie/${moviesId}/credits`;\n    const response = await axios.get(`${url}?api_key=${key}&language=en-US`);\n    console.log(response.data.results);\n\n    this.setState({ casts: response.data.results });\n  }\n\n  render() {\n    const { cast } = this.state;\n    // console.log(cast);\n    return (\n      <>\n        <h3>Cast</h3>\n        <ul className={s.castList}>\n          {cast &&\n            cast.map(({ id, name, profile_path, character }) => {\n              const castImg = `https://image.tmdb.org/t/p/w500${profile_path}`;\n              return (\n                <li key={id} className={s.castItem}>\n                  {/* <Link to={{pathname: `${routes.castPage}/${name}`,\n                          state: {from: this.props.location}}}>\n                    </Link> */}\n                  {profile_path && (\n                    <img\n                      src={castImg}\n                      src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                      alt={name}\n                      className={s.castImage}\n                    />\n                  )}\n                  <div className=\"cast_descript\">\n                    <h3>{name}</h3>\n                    <p>Character: {character}</p>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </>\n    );\n  }\n  // {this.state.movies.map(movie => (\n  //   <li key={movie.id}>\n  //     <span className={s.Title}>{movie.title} </span>\n  //     <span className={s.titleRating}>  {movie.vote_average}</span>\n  //     <p className={s.titleRelise}>Release date: {movie.release_date}</p>\n  //     <p className={s.titleOverview}>Overview: {movie.overview}</p>\n  //     <p className={s.title}></p>\n  //   </li>\n  // ))}\n}\n\nexport default withRouter(Cast);\n","import React, { Component } from \"react\";\nimport api from \"../ApiServise/Api\";\nimport s from \"../Styles/styles.module.css\";\n\nclass Review extends Component {\n  state = {\n    reviews: [],\n  };\n\n  async componentDidMount() {\n    const type = this.props.location.hash.slice(1);\n    const movieId = this.props.match.params.movieId;\n    const queryResponse = (query) => api.getReview(`${query}`, movieId);\n    if (type === \"movie\") {\n      const responceMovieReview = await queryResponse(\"movie\");\n      this.setState({ reviews: responceMovieReview });\n    } else {\n      const responceTVReview = await queryResponse(\"tv\");\n      this.setState({ reviews: responceTVReview });\n    }\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <>\n        {reviews.length ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Review;\n","// import axios from 'axios';\nimport React, { Component, Suspense, lazy } from \"react\";\nimport api from \"../ApiServise/Api\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MoviesList from \"../Components/MoviesList/MoviesList\";\nimport Cast from \"./Cast\";\nimport Review from \"./Review\";\nimport routes from \"../routes\";\nimport s from \"../Styles/styles.module.css\";\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movies: [],\n    title: \"\",\n    name: \"\",\n    overview: \"\",\n    vote_average: null,\n    release_date: null,\n    poster_path: null,\n    genres: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.state.movies;\n    const response = await api.getCast(movieId);\n    this.setState({ movies: response });\n  }\n\n  handleGoBack = () => {\n    const { location, history } = this.props;\n    history.push(location?.state?.from || routes.moviesPage);\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { match, location, history } = this.props;\n    console.log(\"location\", location.state);\n    return (\n      <>\n        <button type=\"button\" className={s.btn} onClick={this.handleGoBack}>\n          Go Back\n        </button>\n\n        <div>\n          <h1 className={s.NavLink}>\n            Movie Details {this.props.match.params.movieId}\n          </h1>\n          <MoviesList movies={movies} match={match} location={location} />\n          {/* <Route path={`${match.path}/:movieId`} component={MovieDetails} /> */}\n        </div>\n\n        <div>\n          <Suspense fallback={<p>Load...</p>}>\n            <Switch>\n              <Route path={`${match.path}/cast`} componen={Cast} />\n              <Route path={`${match.path}/review`} componen={Review} />\n            </Switch>\n          </Suspense>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}